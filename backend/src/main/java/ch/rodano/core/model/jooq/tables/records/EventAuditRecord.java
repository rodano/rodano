/*
 * This file is generated by jOOQ.
 */
package ch.rodano.core.model.jooq.tables.records;


import ch.rodano.core.model.jooq.tables.EventAudit;
import ch.rodano.core.model.jooqutils.AuditRecord;

import java.time.ZonedDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EventAuditRecord extends UpdatableRecordImpl<EventAuditRecord> implements AuditRecord {

	private static final long serialVersionUID = 1L;

	/**
	 * Setter for <code>event_audit.pk</code>.
	 */
	public void setPk(Long value) {
		set(0, value);
	}

	/**
	 * Getter for <code>event_audit.pk</code>.
	 */
	public Long getPk() {
		return (Long) get(0);
	}

	/**
	 * Setter for <code>event_audit.audit_action_fk</code>.
	 */
	public void setAuditActionFk(Long value) {
		set(1, value);
	}

	/**
	 * Getter for <code>event_audit.audit_action_fk</code>.
	 */
	public Long getAuditActionFk() {
		return (Long) get(1);
	}

	/**
	 * Setter for <code>event_audit.audit_datetime</code>.
	 */
	public void setAuditDatetime(ZonedDateTime value) {
		set(2, value);
	}

	/**
	 * Getter for <code>event_audit.audit_datetime</code>.
	 */
	public ZonedDateTime getAuditDatetime() {
		return (ZonedDateTime) get(2);
	}

	/**
	 * Setter for <code>event_audit.audit_actor</code>.
	 */
	public void setAuditActor(String value) {
		set(3, value);
	}

	/**
	 * Getter for <code>event_audit.audit_actor</code>.
	 */
	public String getAuditActor() {
		return (String) get(3);
	}

	/**
	 * Setter for <code>event_audit.audit_user_fk</code>.
	 */
	public void setAuditUserFk(Long value) {
		set(4, value);
	}

	/**
	 * Getter for <code>event_audit.audit_user_fk</code>.
	 */
	public Long getAuditUserFk() {
		return (Long) get(4);
	}

	/**
	 * Setter for <code>event_audit.audit_robot_fk</code>.
	 */
	public void setAuditRobotFk(Long value) {
		set(5, value);
	}

	/**
	 * Getter for <code>event_audit.audit_robot_fk</code>.
	 */
	public Long getAuditRobotFk() {
		return (Long) get(5);
	}

	/**
	 * Setter for <code>event_audit.audit_context</code>.
	 */
	public void setAuditContext(String value) {
		set(6, value);
	}

	/**
	 * Getter for <code>event_audit.audit_context</code>.
	 */
	public String getAuditContext() {
		return (String) get(6);
	}

	/**
	 * Setter for <code>event_audit.audit_object_fk</code>.
	 */
	public void setAuditObjectFk(Long value) {
		set(7, value);
	}

	/**
	 * Getter for <code>event_audit.audit_object_fk</code>.
	 */
	public Long getAuditObjectFk() {
		return (Long) get(7);
	}

	/**
	 * Setter for <code>event_audit.id</code>.
	 */
	public void setId(String value) {
		set(8, value);
	}

	/**
	 * Getter for <code>event_audit.id</code>.
	 */
	public String getId() {
		return (String) get(8);
	}

	/**
	 * Setter for <code>event_audit.deleted</code>.
	 */
	public void setDeleted(Boolean value) {
		set(9, value);
	}

	/**
	 * Getter for <code>event_audit.deleted</code>.
	 */
	public Boolean getDeleted() {
		return (Boolean) get(9);
	}

	/**
	 * Setter for <code>event_audit.scope_fk</code>.
	 */
	public void setScopeFk(Long value) {
		set(10, value);
	}

	/**
	 * Getter for <code>event_audit.scope_fk</code>.
	 */
	public Long getScopeFk() {
		return (Long) get(10);
	}

	/**
	 * Setter for <code>event_audit.scope_model_id</code>.
	 */
	public void setScopeModelId(String value) {
		set(11, value);
	}

	/**
	 * Getter for <code>event_audit.scope_model_id</code>.
	 */
	public String getScopeModelId() {
		return (String) get(11);
	}

	/**
	 * Setter for <code>event_audit.event_group_number</code>.
	 */
	public void setEventGroupNumber(Integer value) {
		set(12, value);
	}

	/**
	 * Getter for <code>event_audit.event_group_number</code>.
	 */
	public Integer getEventGroupNumber() {
		return (Integer) get(12);
	}

	/**
	 * Setter for <code>event_audit.event_model_id</code>.
	 */
	public void setEventModelId(String value) {
		set(13, value);
	}

	/**
	 * Getter for <code>event_audit.event_model_id</code>.
	 */
	public String getEventModelId() {
		return (String) get(13);
	}

	/**
	 * Setter for <code>event_audit.expected_date</code>.
	 */
	public void setExpectedDate(ZonedDateTime value) {
		set(14, value);
	}

	/**
	 * Getter for <code>event_audit.expected_date</code>.
	 */
	public ZonedDateTime getExpectedDate() {
		return (ZonedDateTime) get(14);
	}

	/**
	 * Setter for <code>event_audit.date</code>.
	 */
	public void setDate(ZonedDateTime value) {
		set(15, value);
	}

	/**
	 * Getter for <code>event_audit.date</code>.
	 */
	public ZonedDateTime getDate() {
		return (ZonedDateTime) get(15);
	}

	/**
	 * Setter for <code>event_audit.end_date</code>.
	 */
	public void setEndDate(ZonedDateTime value) {
		set(16, value);
	}

	/**
	 * Getter for <code>event_audit.end_date</code>.
	 */
	public ZonedDateTime getEndDate() {
		return (ZonedDateTime) get(16);
	}

	/**
	 * Setter for <code>event_audit.not_done</code>.
	 */
	public void setNotDone(Boolean value) {
		set(17, value);
	}

	/**
	 * Getter for <code>event_audit.not_done</code>.
	 */
	public Boolean getNotDone() {
		return (Boolean) get(17);
	}

	/**
	 * Setter for <code>event_audit.blocking</code>.
	 */
	public void setBlocking(Boolean value) {
		set(18, value);
	}

	/**
	 * Getter for <code>event_audit.blocking</code>.
	 */
	public Boolean getBlocking() {
		return (Boolean) get(18);
	}

	/**
	 * Setter for <code>event_audit.locked</code>.
	 */
	public void setLocked(Boolean value) {
		set(19, value);
	}

	/**
	 * Getter for <code>event_audit.locked</code>.
	 */
	public Boolean getLocked() {
		return (Boolean) get(19);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached EventAuditRecord
	 */
	public EventAuditRecord() {
		super(EventAudit.EVENT_AUDIT);
	}

	/**
	 * Create a detached, initialised EventAuditRecord
	 */
	public EventAuditRecord(Long pk, Long auditActionFk, ZonedDateTime auditDatetime, String auditActor, Long auditUserFk, Long auditRobotFk, String auditContext, Long auditObjectFk, String id, Boolean deleted, Long scopeFk, String scopeModelId, Integer eventGroupNumber, String eventModelId, ZonedDateTime expectedDate, ZonedDateTime date, ZonedDateTime endDate, Boolean notDone, Boolean blocking, Boolean locked) {
		super(EventAudit.EVENT_AUDIT);

		setPk(pk);
		setAuditActionFk(auditActionFk);
		setAuditDatetime(auditDatetime);
		setAuditActor(auditActor);
		setAuditUserFk(auditUserFk);
		setAuditRobotFk(auditRobotFk);
		setAuditContext(auditContext);
		setAuditObjectFk(auditObjectFk);
		setId(id);
		setDeleted(deleted);
		setScopeFk(scopeFk);
		setScopeModelId(scopeModelId);
		setEventGroupNumber(eventGroupNumber);
		setEventModelId(eventModelId);
		setExpectedDate(expectedDate);
		setDate(date);
		setEndDate(endDate);
		setNotDone(notDone);
		setBlocking(blocking);
		setLocked(locked);
		resetChangedOnNotNull();
	}
}
