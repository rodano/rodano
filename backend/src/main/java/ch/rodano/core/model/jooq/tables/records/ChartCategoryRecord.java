/*
 * This file is generated by jOOQ.
 */
package ch.rodano.core.model.jooq.tables.records;


import ch.rodano.core.model.jooq.tables.ChartCategory;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ChartCategoryRecord extends UpdatableRecordImpl<ChartCategoryRecord> {

	private static final long serialVersionUID = 1L;

	/**
	 * Setter for <code>chart_category.pk</code>.
	 */
	public void setPk(Long value) {
		set(0, value);
	}

	/**
	 * Getter for <code>chart_category.pk</code>.
	 */
	public Long getPk() {
		return (Long) get(0);
	}

	/**
	 * Setter for <code>chart_category.chart_fk</code>.
	 */
	public void setChartFk(Long value) {
		set(1, value);
	}

	/**
	 * Getter for <code>chart_category.chart_fk</code>.
	 */
	public Long getChartFk() {
		return (Long) get(1);
	}

	/**
	 * Setter for <code>chart_category.label</code>.
	 */
	public void setLabel(String value) {
		set(2, value);
	}

	/**
	 * Getter for <code>chart_category.label</code>.
	 */
	public String getLabel() {
		return (String) get(2);
	}

	/**
	 * Setter for <code>chart_category.min</code>.
	 */
	public void setMin(String value) {
		set(3, value);
	}

	/**
	 * Getter for <code>chart_category.min</code>.
	 */
	public String getMin() {
		return (String) get(3);
	}

	/**
	 * Setter for <code>chart_category.max</code>.
	 */
	public void setMax(String value) {
		set(4, value);
	}

	/**
	 * Getter for <code>chart_category.max</code>.
	 */
	public String getMax() {
		return (String) get(4);
	}

	/**
	 * Setter for <code>chart_category.show</code>.
	 */
	public void setShow(Boolean value) {
		set(5, value);
	}

	/**
	 * Getter for <code>chart_category.show</code>.
	 */
	public Boolean getShow() {
		return (Boolean) get(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ChartCategoryRecord
	 */
	public ChartCategoryRecord() {
		super(ChartCategory.CHART_CATEGORY);
	}

	/**
	 * Create a detached, initialised ChartCategoryRecord
	 */
	public ChartCategoryRecord(Long pk, Long chartFk, String label, String min, String max, Boolean show) {
		super(ChartCategory.CHART_CATEGORY);

		setPk(pk);
		setChartFk(chartFk);
		setLabel(label);
		setMin(min);
		setMax(max);
		setShow(show);
		resetChangedOnNotNull();
	}
}
