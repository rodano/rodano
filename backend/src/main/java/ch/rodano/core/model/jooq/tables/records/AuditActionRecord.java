/*
 * This file is generated by jOOQ.
 */
package ch.rodano.core.model.jooq.tables.records;


import ch.rodano.core.model.jooq.tables.AuditAction;

import java.time.ZonedDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AuditActionRecord extends UpdatableRecordImpl<AuditActionRecord> {

	private static final long serialVersionUID = 1L;

	/**
	 * Setter for <code>audit_action.pk</code>.
	 */
	public void setPk(Long value) {
		set(0, value);
	}

	/**
	 * Getter for <code>audit_action.pk</code>.
	 */
	public Long getPk() {
		return (Long) get(0);
	}

	/**
	 * Setter for <code>audit_action.date</code>.
	 */
	public void setDate(ZonedDateTime value) {
		set(1, value);
	}

	/**
	 * Getter for <code>audit_action.date</code>.
	 */
	public ZonedDateTime getDate() {
		return (ZonedDateTime) get(1);
	}

	/**
	 * Setter for <code>audit_action.user_fk</code>.
	 */
	public void setUserFk(Long value) {
		set(2, value);
	}

	/**
	 * Getter for <code>audit_action.user_fk</code>.
	 */
	public Long getUserFk() {
		return (Long) get(2);
	}

	/**
	 * Setter for <code>audit_action.robot_fk</code>.
	 */
	public void setRobotFk(Long value) {
		set(3, value);
	}

	/**
	 * Getter for <code>audit_action.robot_fk</code>.
	 */
	public Long getRobotFk() {
		return (Long) get(3);
	}

	/**
	 * Setter for <code>audit_action.context</code>.
	 */
	public void setContext(String value) {
		set(4, value);
	}

	/**
	 * Getter for <code>audit_action.context</code>.
	 */
	public String getContext() {
		return (String) get(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AuditActionRecord
	 */
	public AuditActionRecord() {
		super(AuditAction.AUDIT_ACTION);
	}

	/**
	 * Create a detached, initialised AuditActionRecord
	 */
	public AuditActionRecord(Long pk, ZonedDateTime date, Long userFk, Long robotFk, String context) {
		super(AuditAction.AUDIT_ACTION);

		setPk(pk);
		setDate(date);
		setUserFk(userFk);
		setRobotFk(robotFk);
		setContext(context);
		resetChangedOnNotNull();
	}
}
