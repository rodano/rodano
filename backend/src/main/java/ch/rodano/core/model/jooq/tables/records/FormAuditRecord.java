/*
 * This file is generated by jOOQ.
 */
package ch.rodano.core.model.jooq.tables.records;


import ch.rodano.core.model.jooq.tables.FormAudit;
import ch.rodano.core.model.jooqutils.AuditRecord;

import java.time.ZonedDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class FormAuditRecord extends UpdatableRecordImpl<FormAuditRecord> implements AuditRecord {

	private static final long serialVersionUID = 1L;

	/**
	 * Setter for <code>form_audit.pk</code>.
	 */
	public void setPk(Long value) {
		set(0, value);
	}

	/**
	 * Getter for <code>form_audit.pk</code>.
	 */
	public Long getPk() {
		return (Long) get(0);
	}

	/**
	 * Setter for <code>form_audit.audit_action_fk</code>.
	 */
	public void setAuditActionFk(Long value) {
		set(1, value);
	}

	/**
	 * Getter for <code>form_audit.audit_action_fk</code>.
	 */
	public Long getAuditActionFk() {
		return (Long) get(1);
	}

	/**
	 * Setter for <code>form_audit.audit_datetime</code>.
	 */
	public void setAuditDatetime(ZonedDateTime value) {
		set(2, value);
	}

	/**
	 * Getter for <code>form_audit.audit_datetime</code>.
	 */
	public ZonedDateTime getAuditDatetime() {
		return (ZonedDateTime) get(2);
	}

	/**
	 * Setter for <code>form_audit.audit_actor</code>.
	 */
	public void setAuditActor(String value) {
		set(3, value);
	}

	/**
	 * Getter for <code>form_audit.audit_actor</code>.
	 */
	public String getAuditActor() {
		return (String) get(3);
	}

	/**
	 * Setter for <code>form_audit.audit_user_fk</code>.
	 */
	public void setAuditUserFk(Long value) {
		set(4, value);
	}

	/**
	 * Getter for <code>form_audit.audit_user_fk</code>.
	 */
	public Long getAuditUserFk() {
		return (Long) get(4);
	}

	/**
	 * Setter for <code>form_audit.audit_robot_fk</code>.
	 */
	public void setAuditRobotFk(Long value) {
		set(5, value);
	}

	/**
	 * Getter for <code>form_audit.audit_robot_fk</code>.
	 */
	public Long getAuditRobotFk() {
		return (Long) get(5);
	}

	/**
	 * Setter for <code>form_audit.audit_context</code>.
	 */
	public void setAuditContext(String value) {
		set(6, value);
	}

	/**
	 * Getter for <code>form_audit.audit_context</code>.
	 */
	public String getAuditContext() {
		return (String) get(6);
	}

	/**
	 * Setter for <code>form_audit.audit_object_fk</code>.
	 */
	public void setAuditObjectFk(Long value) {
		set(7, value);
	}

	/**
	 * Getter for <code>form_audit.audit_object_fk</code>.
	 */
	public Long getAuditObjectFk() {
		return (Long) get(7);
	}

	/**
	 * Setter for <code>form_audit.deleted</code>.
	 */
	public void setDeleted(Boolean value) {
		set(8, value);
	}

	/**
	 * Getter for <code>form_audit.deleted</code>.
	 */
	public Boolean getDeleted() {
		return (Boolean) get(8);
	}

	/**
	 * Setter for <code>form_audit.scope_fk</code>.
	 */
	public void setScopeFk(Long value) {
		set(9, value);
	}

	/**
	 * Getter for <code>form_audit.scope_fk</code>.
	 */
	public Long getScopeFk() {
		return (Long) get(9);
	}

	/**
	 * Setter for <code>form_audit.event_fk</code>.
	 */
	public void setEventFk(Long value) {
		set(10, value);
	}

	/**
	 * Getter for <code>form_audit.event_fk</code>.
	 */
	public Long getEventFk() {
		return (Long) get(10);
	}

	/**
	 * Setter for <code>form_audit.form_model_id</code>.
	 */
	public void setFormModelId(String value) {
		set(11, value);
	}

	/**
	 * Getter for <code>form_audit.form_model_id</code>.
	 */
	public String getFormModelId() {
		return (String) get(11);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached FormAuditRecord
	 */
	public FormAuditRecord() {
		super(FormAudit.FORM_AUDIT);
	}

	/**
	 * Create a detached, initialised FormAuditRecord
	 */
	public FormAuditRecord(Long pk, Long auditActionFk, ZonedDateTime auditDatetime, String auditActor, Long auditUserFk, Long auditRobotFk, String auditContext, Long auditObjectFk, Boolean deleted, Long scopeFk, Long eventFk, String formModelId) {
		super(FormAudit.FORM_AUDIT);

		setPk(pk);
		setAuditActionFk(auditActionFk);
		setAuditDatetime(auditDatetime);
		setAuditActor(auditActor);
		setAuditUserFk(auditUserFk);
		setAuditRobotFk(auditRobotFk);
		setAuditContext(auditContext);
		setAuditObjectFk(auditObjectFk);
		setDeleted(deleted);
		setScopeFk(scopeFk);
		setEventFk(eventFk);
		setFormModelId(formModelId);
		resetChangedOnNotNull();
	}
}
