/*
 * This file is generated by jOOQ.
 */
package ch.rodano.core.model.jooq.tables.records;


import ch.rodano.core.model.jooq.tables.Resource;

import java.time.ZonedDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ResourceRecord extends UpdatableRecordImpl<ResourceRecord> {

	private static final long serialVersionUID = 1L;

	/**
	 * Setter for <code>resource.pk</code>.
	 */
	public void setPk(Long value) {
		set(0, value);
	}

	/**
	 * Getter for <code>resource.pk</code>.
	 */
	public Long getPk() {
		return (Long) get(0);
	}

	/**
	 * Setter for <code>resource.creation_time</code>.
	 */
	public void setCreationTime(ZonedDateTime value) {
		set(1, value);
	}

	/**
	 * Getter for <code>resource.creation_time</code>.
	 */
	public ZonedDateTime getCreationTime() {
		return (ZonedDateTime) get(1);
	}

	/**
	 * Setter for <code>resource.last_update_time</code>.
	 */
	public void setLastUpdateTime(ZonedDateTime value) {
		set(2, value);
	}

	/**
	 * Getter for <code>resource.last_update_time</code>.
	 */
	public ZonedDateTime getLastUpdateTime() {
		return (ZonedDateTime) get(2);
	}

	/**
	 * Setter for <code>resource.deleted</code>.
	 */
	public void setDeleted(Boolean value) {
		set(3, value);
	}

	/**
	 * Getter for <code>resource.deleted</code>.
	 */
	public Boolean getDeleted() {
		return (Boolean) get(3);
	}

	/**
	 * Setter for <code>resource.user_fk</code>.
	 */
	public void setUserFk(Long value) {
		set(4, value);
	}

	/**
	 * Getter for <code>resource.user_fk</code>.
	 */
	public Long getUserFk() {
		return (Long) get(4);
	}

	/**
	 * Setter for <code>resource.scope_fk</code>.
	 */
	public void setScopeFk(Long value) {
		set(5, value);
	}

	/**
	 * Getter for <code>resource.scope_fk</code>.
	 */
	public Long getScopeFk() {
		return (Long) get(5);
	}

	/**
	 * Setter for <code>resource.uuid</code>.
	 */
	public void setUuid(String value) {
		set(6, value);
	}

	/**
	 * Getter for <code>resource.uuid</code>.
	 */
	public String getUuid() {
		return (String) get(6);
	}

	/**
	 * Setter for <code>resource.title</code>.
	 */
	public void setTitle(String value) {
		set(7, value);
	}

	/**
	 * Getter for <code>resource.title</code>.
	 */
	public String getTitle() {
		return (String) get(7);
	}

	/**
	 * Setter for <code>resource.description</code>.
	 */
	public void setDescription(String value) {
		set(8, value);
	}

	/**
	 * Getter for <code>resource.description</code>.
	 */
	public String getDescription() {
		return (String) get(8);
	}

	/**
	 * Setter for <code>resource.category_id</code>.
	 */
	public void setCategoryId(String value) {
		set(9, value);
	}

	/**
	 * Getter for <code>resource.category_id</code>.
	 */
	public String getCategoryId() {
		return (String) get(9);
	}

	/**
	 * Setter for <code>resource.public_resource</code>.
	 */
	public void setPublicResource(Boolean value) {
		set(10, value);
	}

	/**
	 * Getter for <code>resource.public_resource</code>.
	 */
	public Boolean getPublicResource() {
		return (Boolean) get(10);
	}

	/**
	 * Setter for <code>resource.filename</code>.
	 */
	public void setFilename(String value) {
		set(11, value);
	}

	/**
	 * Getter for <code>resource.filename</code>.
	 */
	public String getFilename() {
		return (String) get(11);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ResourceRecord
	 */
	public ResourceRecord() {
		super(Resource.RESOURCE);
	}

	/**
	 * Create a detached, initialised ResourceRecord
	 */
	public ResourceRecord(Long pk, ZonedDateTime creationTime, ZonedDateTime lastUpdateTime, Boolean deleted, Long userFk, Long scopeFk, String uuid, String title, String description, String categoryId, Boolean publicResource, String filename) {
		super(Resource.RESOURCE);

		setPk(pk);
		setCreationTime(creationTime);
		setLastUpdateTime(lastUpdateTime);
		setDeleted(deleted);
		setUserFk(userFk);
		setScopeFk(scopeFk);
		setUuid(uuid);
		setTitle(title);
		setDescription(description);
		setCategoryId(categoryId);
		setPublicResource(publicResource);
		setFilename(filename);
		resetChangedOnNotNull();
	}
}
