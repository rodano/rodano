/*
 * This file is generated by jOOQ.
 */
package ch.rodano.core.model.jooq;


import ch.rodano.core.model.jooq.tables.AuditAction;
import ch.rodano.core.model.jooq.tables.Chart;
import ch.rodano.core.model.jooq.tables.ChartCategory;
import ch.rodano.core.model.jooq.tables.ChartColor;
import ch.rodano.core.model.jooq.tables.ChartState;
import ch.rodano.core.model.jooq.tables.Dataset;
import ch.rodano.core.model.jooq.tables.DatasetAudit;
import ch.rodano.core.model.jooq.tables.Event;
import ch.rodano.core.model.jooq.tables.EventAudit;
import ch.rodano.core.model.jooq.tables.Field;
import ch.rodano.core.model.jooq.tables.FieldAudit;
import ch.rodano.core.model.jooq.tables.File;
import ch.rodano.core.model.jooq.tables.Form;
import ch.rodano.core.model.jooq.tables.FormAudit;
import ch.rodano.core.model.jooq.tables.Mail;
import ch.rodano.core.model.jooq.tables.MailAttachment;
import ch.rodano.core.model.jooq.tables.Payment;
import ch.rodano.core.model.jooq.tables.PaymentBatch;
import ch.rodano.core.model.jooq.tables.PaymentTarget;
import ch.rodano.core.model.jooq.tables.Resource;
import ch.rodano.core.model.jooq.tables.Robot;
import ch.rodano.core.model.jooq.tables.RobotAudit;
import ch.rodano.core.model.jooq.tables.Role;
import ch.rodano.core.model.jooq.tables.RoleAudit;
import ch.rodano.core.model.jooq.tables.Scope;
import ch.rodano.core.model.jooq.tables.ScopeAncestor;
import ch.rodano.core.model.jooq.tables.ScopeAudit;
import ch.rodano.core.model.jooq.tables.ScopeRelation;
import ch.rodano.core.model.jooq.tables.User;
import ch.rodano.core.model.jooq.tables.UserAudit;
import ch.rodano.core.model.jooq.tables.UserSession;
import ch.rodano.core.model.jooq.tables.WorkflowStatus;
import ch.rodano.core.model.jooq.tables.WorkflowStatusAudit;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class DefaultSchema extends SchemaImpl {

	private static final long serialVersionUID = 1L;

	/**
	 * The reference instance of <code>DEFAULT_SCHEMA</code>
	 */
	public static final DefaultSchema DEFAULT_SCHEMA = new DefaultSchema();

	/**
	 * The table <code>audit_action</code>.
	 */
	public final AuditAction AUDIT_ACTION = AuditAction.AUDIT_ACTION;

	/**
	 * The table <code>chart</code>.
	 */
	public final Chart CHART = Chart.CHART;

	/**
	 * The table <code>chart_category</code>.
	 */
	public final ChartCategory CHART_CATEGORY = ChartCategory.CHART_CATEGORY;

	/**
	 * The table <code>chart_color</code>.
	 */
	public final ChartColor CHART_COLOR = ChartColor.CHART_COLOR;

	/**
	 * The table <code>chart_state</code>.
	 */
	public final ChartState CHART_STATE = ChartState.CHART_STATE;

	/**
	 * The table <code>dataset</code>.
	 */
	public final Dataset DATASET = Dataset.DATASET;

	/**
	 * The table <code>dataset_audit</code>.
	 */
	public final DatasetAudit DATASET_AUDIT = DatasetAudit.DATASET_AUDIT;

	/**
	 * The table <code>event</code>.
	 */
	public final Event EVENT = Event.EVENT;

	/**
	 * The table <code>event_audit</code>.
	 */
	public final EventAudit EVENT_AUDIT = EventAudit.EVENT_AUDIT;

	/**
	 * The table <code>field</code>.
	 */
	public final Field FIELD = Field.FIELD;

	/**
	 * The table <code>field_audit</code>.
	 */
	public final FieldAudit FIELD_AUDIT = FieldAudit.FIELD_AUDIT;

	/**
	 * The table <code>file</code>.
	 */
	public final File FILE = File.FILE;

	/**
	 * The table <code>form</code>.
	 */
	public final Form FORM = Form.FORM;

	/**
	 * The table <code>form_audit</code>.
	 */
	public final FormAudit FORM_AUDIT = FormAudit.FORM_AUDIT;

	/**
	 * The table <code>mail</code>.
	 */
	public final Mail MAIL = Mail.MAIL;

	/**
	 * The table <code>mail_attachment</code>.
	 */
	public final MailAttachment MAIL_ATTACHMENT = MailAttachment.MAIL_ATTACHMENT;

	/**
	 * The table <code>payment</code>.
	 */
	public final Payment PAYMENT = Payment.PAYMENT;

	/**
	 * The table <code>payment_batch</code>.
	 */
	public final PaymentBatch PAYMENT_BATCH = PaymentBatch.PAYMENT_BATCH;

	/**
	 * The table <code>payment_target</code>.
	 */
	public final PaymentTarget PAYMENT_TARGET = PaymentTarget.PAYMENT_TARGET;

	/**
	 * The table <code>resource</code>.
	 */
	public final Resource RESOURCE = Resource.RESOURCE;

	/**
	 * The table <code>robot</code>.
	 */
	public final Robot ROBOT = Robot.ROBOT;

	/**
	 * The table <code>robot_audit</code>.
	 */
	public final RobotAudit ROBOT_AUDIT = RobotAudit.ROBOT_AUDIT;

	/**
	 * The table <code>role</code>.
	 */
	public final Role ROLE = Role.ROLE;

	/**
	 * The table <code>role_audit</code>.
	 */
	public final RoleAudit ROLE_AUDIT = RoleAudit.ROLE_AUDIT;

	/**
	 * The table <code>scope</code>.
	 */
	public final Scope SCOPE = Scope.SCOPE;

	/**
	 * The table <code>scope_ancestor</code>.
	 */
	public final ScopeAncestor SCOPE_ANCESTOR = ScopeAncestor.SCOPE_ANCESTOR;

	/**
	 * The table <code>scope_audit</code>.
	 */
	public final ScopeAudit SCOPE_AUDIT = ScopeAudit.SCOPE_AUDIT;

	/**
	 * The table <code>scope_relation</code>.
	 */
	public final ScopeRelation SCOPE_RELATION = ScopeRelation.SCOPE_RELATION;

	/**
	 * The table <code>user</code>.
	 */
	public final User USER = User.USER;

	/**
	 * The table <code>user_audit</code>.
	 */
	public final UserAudit USER_AUDIT = UserAudit.USER_AUDIT;

	/**
	 * The table <code>user_session</code>.
	 */
	public final UserSession USER_SESSION = UserSession.USER_SESSION;

	/**
	 * The table <code>workflow_status</code>.
	 */
	public final WorkflowStatus WORKFLOW_STATUS = WorkflowStatus.WORKFLOW_STATUS;

	/**
	 * The table <code>workflow_status_audit</code>.
	 */
	public final WorkflowStatusAudit WORKFLOW_STATUS_AUDIT = WorkflowStatusAudit.WORKFLOW_STATUS_AUDIT;

	/**
	 * No further instances allowed
	 */
	private DefaultSchema() {
		super("", null);
	}


	@Override
	public Catalog getCatalog() {
		return DefaultCatalog.DEFAULT_CATALOG;
	}

	@Override
	public final List<Table<?>> getTables() {
		return Arrays.asList(
			AuditAction.AUDIT_ACTION,
			Chart.CHART,
			ChartCategory.CHART_CATEGORY,
			ChartColor.CHART_COLOR,
			ChartState.CHART_STATE,
			Dataset.DATASET,
			DatasetAudit.DATASET_AUDIT,
			Event.EVENT,
			EventAudit.EVENT_AUDIT,
			Field.FIELD,
			FieldAudit.FIELD_AUDIT,
			File.FILE,
			Form.FORM,
			FormAudit.FORM_AUDIT,
			Mail.MAIL,
			MailAttachment.MAIL_ATTACHMENT,
			Payment.PAYMENT,
			PaymentBatch.PAYMENT_BATCH,
			PaymentTarget.PAYMENT_TARGET,
			Resource.RESOURCE,
			Robot.ROBOT,
			RobotAudit.ROBOT_AUDIT,
			Role.ROLE,
			RoleAudit.ROLE_AUDIT,
			Scope.SCOPE,
			ScopeAncestor.SCOPE_ANCESTOR,
			ScopeAudit.SCOPE_AUDIT,
			ScopeRelation.SCOPE_RELATION,
			User.USER,
			UserAudit.USER_AUDIT,
			UserSession.USER_SESSION,
			WorkflowStatus.WORKFLOW_STATUS,
			WorkflowStatusAudit.WORKFLOW_STATUS_AUDIT
		);
	}
}
