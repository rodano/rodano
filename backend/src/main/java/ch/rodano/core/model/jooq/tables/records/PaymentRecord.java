/*
 * This file is generated by jOOQ.
 */
package ch.rodano.core.model.jooq.tables.records;


import ch.rodano.core.model.jooq.tables.Payment;

import java.time.ZonedDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PaymentRecord extends UpdatableRecordImpl<PaymentRecord> {

	private static final long serialVersionUID = 1L;

	/**
	 * Setter for <code>payment.pk</code>.
	 */
	public void setPk(Long value) {
		set(0, value);
	}

	/**
	 * Getter for <code>payment.pk</code>.
	 */
	public Long getPk() {
		return (Long) get(0);
	}

	/**
	 * Setter for <code>payment.creation_time</code>.
	 */
	public void setCreationTime(ZonedDateTime value) {
		set(1, value);
	}

	/**
	 * Getter for <code>payment.creation_time</code>.
	 */
	public ZonedDateTime getCreationTime() {
		return (ZonedDateTime) get(1);
	}

	/**
	 * Setter for <code>payment.last_update_time</code>.
	 */
	public void setLastUpdateTime(ZonedDateTime value) {
		set(2, value);
	}

	/**
	 * Getter for <code>payment.last_update_time</code>.
	 */
	public ZonedDateTime getLastUpdateTime() {
		return (ZonedDateTime) get(2);
	}

	/**
	 * Setter for <code>payment.deleted</code>.
	 */
	public void setDeleted(Boolean value) {
		set(3, value);
	}

	/**
	 * Getter for <code>payment.deleted</code>.
	 */
	public Boolean getDeleted() {
		return (Boolean) get(3);
	}

	/**
	 * Setter for <code>payment.payment_batch_fk</code>.
	 */
	public void setPaymentBatchFk(Long value) {
		set(4, value);
	}

	/**
	 * Getter for <code>payment.payment_batch_fk</code>.
	 */
	public Long getPaymentBatchFk() {
		return (Long) get(4);
	}

	/**
	 * Setter for <code>payment.workflow_status_fk</code>.
	 */
	public void setWorkflowStatusFk(Long value) {
		set(5, value);
	}

	/**
	 * Getter for <code>payment.workflow_status_fk</code>.
	 */
	public Long getWorkflowStatusFk() {
		return (Long) get(5);
	}

	/**
	 * Setter for <code>payment.plan_id</code>.
	 */
	public void setPlanId(String value) {
		set(6, value);
	}

	/**
	 * Getter for <code>payment.plan_id</code>.
	 */
	public String getPlanId() {
		return (String) get(6);
	}

	/**
	 * Setter for <code>payment.step_id</code>.
	 */
	public void setStepId(String value) {
		set(7, value);
	}

	/**
	 * Getter for <code>payment.step_id</code>.
	 */
	public String getStepId() {
		return (String) get(7);
	}

	/**
	 * Setter for <code>payment.status</code>.
	 */
	public void setStatus(String value) {
		set(8, value);
	}

	/**
	 * Getter for <code>payment.status</code>.
	 */
	public String getStatus() {
		return (String) get(8);
	}

	/**
	 * Setter for <code>payment.value</code>.
	 */
	public void setValue(Integer value) {
		set(9, value);
	}

	/**
	 * Getter for <code>payment.value</code>.
	 */
	public Integer getValue() {
		return (Integer) get(9);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PaymentRecord
	 */
	public PaymentRecord() {
		super(Payment.PAYMENT);
	}

	/**
	 * Create a detached, initialised PaymentRecord
	 */
	public PaymentRecord(Long pk, ZonedDateTime creationTime, ZonedDateTime lastUpdateTime, Boolean deleted, Long paymentBatchFk, Long workflowStatusFk, String planId, String stepId, String status, Integer value) {
		super(Payment.PAYMENT);

		setPk(pk);
		setCreationTime(creationTime);
		setLastUpdateTime(lastUpdateTime);
		setDeleted(deleted);
		setPaymentBatchFk(paymentBatchFk);
		setWorkflowStatusFk(workflowStatusFk);
		setPlanId(planId);
		setStepId(stepId);
		setStatus(status);
		setValue(value);
		resetChangedOnNotNull();
	}
}
